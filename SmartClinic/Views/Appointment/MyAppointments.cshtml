@model List<SmartClinic.ViewModels.PatientAppointmentVM>
@{
    ViewData["Title"] = "My Appointments";
}
<h2>My Appointments</h2>

<script src="https://www.paypal.com/sdk/js?client-id=AfJ1us5jWF7bSWpoEoVFc85_T2n0uWmYehWQhB6cSFbJucllqS4zQa0ZpUnRS1B7OZLB0YQNuxMSq7Tt&currency=USD"></script>

@if (!Model.Any())
{
    <div class="alert alert-info">You have no appointments.</div>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Date</th>
                <th>Doctor</th>
                <th>Specialization</th>
                <th>Amount</th>
                <th>Payment Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var a in Model)
        {
            <tr>
                <td>@a.AppointmentDate.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@a.DoctorName</td>
                <td>@a.Specialization</td>
                <td>@a.Amount.ToString("C")</td>
                <td id="status-@a.AppointmentId">
                    @if (a.IsPayed)
                    {
                        <span class="badge bg-success">Paid</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Not Paid</span>
                    }
                </td>
                <td>
                    @if (!a.IsPayed)
                    {
                        <div id="paypal-button-container-@a.AppointmentId"></div>
                        <script>
                            paypal.Buttons({
                                createOrder: function (data, actions) {
                                    return actions.order.create({
                                        purchase_units: [{
                                            amount: {
                                                value: '@a.Amount'
                                            }
                                        }]
                                    });
                                },
                                onApprove: function (data, actions) {
                                    return actions.order.capture().then(function (details) {
                                        fetch('/Appointment/MarkAsPaid?appointmentId=@a.AppointmentId', {
                                            method: 'POST'
                                        }).then(res => {
                                            if (res.ok) {
                                                document.querySelector("#status-@a.AppointmentId").innerHTML =
                                                    '<span class="badge bg-success">Paid</span>';
                                                document.querySelector("#paypal-button-container-@a.AppointmentId").innerHTML = '';
                                            }
                                        });
                                    });
                                }
                            }).render('#paypal-button-container-@a.AppointmentId');
                        </script>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}

