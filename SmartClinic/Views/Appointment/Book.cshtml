@using SmartClinic.ViewModels
@model AppointmentBookingVM

@{
    ViewData["Title"] = "Book Appointment";
}

<style>
    /* Petrolic color palette */
    :root {
        --petrolic-dark: #003b4a;
        --petrolic-medium: #005a65;
        --petrolic-light: #00b4ab;
        --petrolic-lighter: #cceeee;
    }

    h2 {
        color: var(--petrolic-dark);
        font-weight: 700;
        margin-bottom: 1.5rem;
        text-align: center;
        font-family: 'Poppins', sans-serif;
    }

    form {
        max-width: 600px;
        margin: 0 auto 3rem;
        background: var(--petrolic-lighter);
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0, 180, 171, 0.2);
    }

    label {
        font-weight: 600;
        color: var(--petrolic-dark);
        font-size: 1.05rem;
    }

    select.form-control, input.form-control {
        border: 2px solid var(--petrolic-medium);
        transition: border-color 0.3s ease;
        font-size: 1rem;
        padding: 0.5rem 1rem;
        border-radius: 8px;
    }

        select.form-control:focus, input.form-control:focus {
            border-color: var(--petrolic-light);
            box-shadow: 0 0 8px var(--petrolic-light);
            outline: none;
        }

    .btn-primary {
        background-color: var(--petrolic-light);
        border-color: var(--petrolic-light);
        font-weight: 600;
        font-size: 1.1rem;
        padding: 0.75rem 2rem;
        border-radius: 10px;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
        display: block;
        margin: 1.5rem auto 0;
    }

        .btn-primary:hover {
            background-color: var(--petrolic-medium);
            border-color: var(--petrolic-medium);
            box-shadow: 0 6px 16px rgba(0, 180, 171, 0.6);
        }

    .alert-success {
        max-width: 600px;
        margin: 1rem auto;
        background-color: #d0f0ed;
        border-color: var(--petrolic-light);
        color: var(--petrolic-dark);
        font-weight: 600;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 180, 171, 0.25);
    }

    .alert-danger {
        max-width: 600px;
        margin: 1rem auto;
        border-radius: 8px;
        font-weight: 600;
        box-shadow: 0 4px 12px rgba(255, 0, 0, 0.15);
    }

    #dateUnavailableMessage {
        font-weight: 700;
        color: #d9534f;
    }

</style>

<h2>Book an Appointment</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })

<form asp-action="Book" method="post">
    <div class="form-group mb-3">
        <label for="Specialization">Specialization</label>
        <select id="Specialization" name="SelectedSpecialization" class="form-control">
            <option value="">-- Select Specialization --</option>
            @foreach (var spec in Model.Specializations)
            {
                <option value="@spec">@spec</option>
            }
        </select>
    </div>

    <div class="form-group mb-3">
        <label for="DoctorId">Doctor</label>
        <select id="DoctorId" name="DoctorId" class="form-control">
            <option value="">-- Select Doctor --</option>
        </select>
    </div>

    <div class="form-group mb-3">
        <label for="AppointmentDate">Appointment Date & Time</label>
        <input type="datetime-local" id="AppointmentDate" name="AppointmentDate"
               class="form-control" required />
        <div id="dateUnavailableMessage" class="text-danger mt-2" style="display:none;">
            Booking is not available on the selected date. Please choose another date.
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Book</button>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Your existing scripts untouched
            $('#Specialization').change(function () {
                var selectedSpec = $(this).val();
                $('#DoctorId').empty().append('<option value="">Loading...</option>');

                if (selectedSpec !== "") {
                    $.ajax({
                        url: '/Appointment/GetDoctorsBySpecialization',
                        type: 'GET',
                        data: { specialization: selectedSpec },
                        success: function (data) {
                            $('#DoctorId').empty().append('<option value="">-- Select Doctor --</option>');
                            $.each(data, function (i, doctor) {
                                $('#DoctorId').append('<option value="' + doctor.id + '">' + doctor.fullName + '</option>');
                            });
                        }
                    });
                } else {
                    $('#DoctorId').empty().append('<option value="">-- Select Doctor --</option>');
                }
            });

            $('#DoctorId').change(function () {
                var doctorId = $(this).val();
                if (doctorId) {
                    $.ajax({
                        url: '/Appointment/GetDoctorAvailability',
                        type: 'GET',
                        data: { doctorId: doctorId },
                        success: function (data) {
                            var unavailableDays = data.daysOff.map(function (dayName) {
                                const dayMap = {
                                    "Sunday": 0,
                                    "Monday": 1,
                                    "Tuesday": 2,
                                    "Wednesday": 3,
                                    "Thursday": 4,
                                    "Friday": 5,
                                    "Saturday": 6
                                };
                                return dayMap[dayName];
                            });

                            var unavailableDates = data.exceptions;

                            $('#AppointmentDate').off('input').on('input', function () {
                                var selected = new Date(this.value);
                                var selectedStr = this.value.split('T')[0];
                                var day = selected.getDay();

                                var isUnavailableDay = unavailableDays.includes(day);
                                var isExceptionDate = unavailableDates.includes(selectedStr);

                                if (isUnavailableDay || isExceptionDate) {
                                    $('#dateUnavailableMessage').show();
                                    this.setCustomValidity('Booking is not available on the selected date.');
                                } else {
                                    $('#dateUnavailableMessage').hide();
                                    this.setCustomValidity('');
                                }
                            });
                        }
                    });
                }
            });
        });
    </script>
}
